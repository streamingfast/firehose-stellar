// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: sf/stellar/type/v1/block.proto

package pbstellar

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContractEvent_Type int32

const (
	ContractEvent_SYSTEM     ContractEvent_Type = 0
	ContractEvent_CONTRACT   ContractEvent_Type = 1
	ContractEvent_DIAGNOSTIC ContractEvent_Type = 2
)

// Enum value maps for ContractEvent_Type.
var (
	ContractEvent_Type_name = map[int32]string{
		0: "SYSTEM",
		1: "CONTRACT",
		2: "DIAGNOSTIC",
	}
	ContractEvent_Type_value = map[string]int32{
		"SYSTEM":     0,
		"CONTRACT":   1,
		"DIAGNOSTIC": 2,
	}
)

func (x ContractEvent_Type) Enum() *ContractEvent_Type {
	p := new(ContractEvent_Type)
	*p = x
	return p
}

func (x ContractEvent_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContractEvent_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_stellar_type_v1_block_proto_enumTypes[0].Descriptor()
}

func (ContractEvent_Type) Type() protoreflect.EnumType {
	return &file_sf_stellar_type_v1_block_proto_enumTypes[0]
}

func (x ContractEvent_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContractEvent_Type.Descriptor instead.
func (ContractEvent_Type) EnumDescriptor() ([]byte, []int) {
	return file_sf_stellar_type_v1_block_proto_rawDescGZIP(), []int{4, 0}
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number       uint64                 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Hash         string                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Header       *Header                `protobuf:"bytes,3,opt,name=header,proto3" json:"header,omitempty"` // Metadata metadata = 4; // todo: is there any information in the metadata that is interesting for the user?
	Transactions []*Transaction         `protobuf:"bytes,6,rep,name=transactions,proto3" json:"transactions,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_sf_stellar_type_v1_block_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_sf_stellar_type_v1_block_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_sf_stellar_type_v1_block_proto_rawDescGZIP(), []int{0}
}

func (x *Block) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Block) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Block) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Block) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Block) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LedgerVersion      uint32 `protobuf:"varint,1,opt,name=ledger_version,json=ledgerVersion,proto3" json:"ledger_version,omitempty"`
	PreviousLedgerHash string `protobuf:"bytes,2,opt,name=previous_ledger_hash,json=previousLedgerHash,proto3" json:"previous_ledger_hash,omitempty"`
	TotalCoins         int64  `protobuf:"varint,3,opt,name=total_coins,json=totalCoins,proto3" json:"total_coins,omitempty"` // The amount of stroops in existence at the end of the ledger
	BaseFee            uint32 `protobuf:"varint,4,opt,name=base_fee,json=baseFee,proto3" json:"base_fee,omitempty"`
	BaseReserve        uint32 `protobuf:"varint,5,opt,name=base_reserve,json=baseReserve,proto3" json:"base_reserve,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	mi := &file_sf_stellar_type_v1_block_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_sf_stellar_type_v1_block_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_sf_stellar_type_v1_block_proto_rawDescGZIP(), []int{1}
}

func (x *Header) GetLedgerVersion() uint32 {
	if x != nil {
		return x.LedgerVersion
	}
	return 0
}

func (x *Header) GetPreviousLedgerHash() string {
	if x != nil {
		return x.PreviousLedgerHash
	}
	return ""
}

func (x *Header) GetTotalCoins() int64 {
	if x != nil {
		return x.TotalCoins
	}
	return 0
}

func (x *Header) GetBaseFee() uint32 {
	if x != nil {
		return x.BaseFee
	}
	return 0
}

func (x *Header) GetBaseReserve() uint32 {
	if x != nil {
		return x.BaseReserve
	}
	return 0
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash             string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Status           string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ApplicationOrder uint64                 `protobuf:"varint,5,opt,name=application_order,json=applicationOrder,proto3" json:"application_order,omitempty"`
	ResultMetaXdr    string                 `protobuf:"bytes,6,opt,name=result_meta_xdr,json=resultMetaXdr,proto3" json:"result_meta_xdr,omitempty"`
	ResultXdr        string                 `protobuf:"bytes,7,opt,name=result_xdr,json=resultXdr,proto3" json:"result_xdr,omitempty"`
	SorobanMeta      *SorobanMeta           `protobuf:"bytes,10,opt,name=soroban_meta,json=sorobanMeta,proto3" json:"soroban_meta,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_sf_stellar_type_v1_block_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_sf_stellar_type_v1_block_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_sf_stellar_type_v1_block_proto_rawDescGZIP(), []int{2}
}

func (x *Transaction) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Transaction) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Transaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Transaction) GetApplicationOrder() uint64 {
	if x != nil {
		return x.ApplicationOrder
	}
	return 0
}

func (x *Transaction) GetResultMetaXdr() string {
	if x != nil {
		return x.ResultMetaXdr
	}
	return ""
}

func (x *Transaction) GetResultXdr() string {
	if x != nil {
		return x.ResultXdr
	}
	return ""
}

func (x *Transaction) GetSorobanMeta() *SorobanMeta {
	if x != nil {
		return x.SorobanMeta
	}
	return nil
}

type DiagnosticEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InSuccessfulContractCall bool           `protobuf:"varint,1,opt,name=in_successful_contract_call,json=inSuccessfulContractCall,proto3" json:"in_successful_contract_call,omitempty"`
	ContractEvent            *ContractEvent `protobuf:"bytes,2,opt,name=contract_event,json=contractEvent,proto3" json:"contract_event,omitempty"`
}

func (x *DiagnosticEvent) Reset() {
	*x = DiagnosticEvent{}
	mi := &file_sf_stellar_type_v1_block_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiagnosticEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosticEvent) ProtoMessage() {}

func (x *DiagnosticEvent) ProtoReflect() protoreflect.Message {
	mi := &file_sf_stellar_type_v1_block_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosticEvent.ProtoReflect.Descriptor instead.
func (*DiagnosticEvent) Descriptor() ([]byte, []int) {
	return file_sf_stellar_type_v1_block_proto_rawDescGZIP(), []int{3}
}

func (x *DiagnosticEvent) GetInSuccessfulContractCall() bool {
	if x != nil {
		return x.InSuccessfulContractCall
	}
	return false
}

func (x *DiagnosticEvent) GetContractEvent() *ContractEvent {
	if x != nil {
		return x.ContractEvent
	}
	return nil
}

type ContractEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       ContractEvent_Type `protobuf:"varint,1,opt,name=type,proto3,enum=sf.stellar.type.v1.ContractEvent_Type" json:"type,omitempty"`
	ContractId string             `protobuf:"bytes,2,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"` // todo: check how we want to add the contract body
}

func (x *ContractEvent) Reset() {
	*x = ContractEvent{}
	mi := &file_sf_stellar_type_v1_block_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContractEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractEvent) ProtoMessage() {}

func (x *ContractEvent) ProtoReflect() protoreflect.Message {
	mi := &file_sf_stellar_type_v1_block_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractEvent.ProtoReflect.Descriptor instead.
func (*ContractEvent) Descriptor() ([]byte, []int) {
	return file_sf_stellar_type_v1_block_proto_rawDescGZIP(), []int{4}
}

func (x *ContractEvent) GetType() ContractEvent_Type {
	if x != nil {
		return x.Type
	}
	return ContractEvent_SYSTEM
}

func (x *ContractEvent) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

type SorobanMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractEvent []*ContractEvent `protobuf:"bytes,1,rep,name=contract_event,json=contractEvent,proto3" json:"contract_event,omitempty"`
}

func (x *SorobanMeta) Reset() {
	*x = SorobanMeta{}
	mi := &file_sf_stellar_type_v1_block_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SorobanMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SorobanMeta) ProtoMessage() {}

func (x *SorobanMeta) ProtoReflect() protoreflect.Message {
	mi := &file_sf_stellar_type_v1_block_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SorobanMeta.ProtoReflect.Descriptor instead.
func (*SorobanMeta) Descriptor() ([]byte, []int) {
	return file_sf_stellar_type_v1_block_proto_rawDescGZIP(), []int{5}
}

func (x *SorobanMeta) GetContractEvent() []*ContractEvent {
	if x != nil {
		return x.ContractEvent
	}
	return nil
}

var File_sf_stellar_type_v1_block_proto protoreflect.FileDescriptor

var file_sf_stellar_type_v1_block_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x73, 0x66, 0x2f, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x73, 0x66, 0x2e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x01, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x32, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x66,
	0x2e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x43, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x66, 0x2e, 0x73, 0x74, 0x65, 0x6c, 0x6c,
	0x61, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xc0, 0x01, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x69,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x69, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x22, 0xac, 0x02, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x78, 0x64, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x58, 0x64, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x78, 0x64, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x58, 0x64, 0x72, 0x12, 0x42, 0x0a,
	0x0c, 0x73, 0x6f, 0x72, 0x6f, 0x62, 0x61, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x66, 0x2e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x6f, 0x62, 0x61, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x0b, 0x73, 0x6f, 0x72, 0x6f, 0x62, 0x61, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x22, 0x9a, 0x01, 0x0a, 0x0f, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x1b, 0x69, 0x6e, 0x5f, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x69, 0x6e, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x43, 0x61, 0x6c, 0x6c, 0x12, 0x48, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73,
	0x66, 0x2e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x9e,
	0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26,
	0x2e, 0x73, 0x66, 0x2e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0x30, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x41, 0x47, 0x4e, 0x4f, 0x53, 0x54, 0x49, 0x43, 0x10, 0x02, 0x22,
	0x57, 0x0a, 0x0b, 0x53, 0x6f, 0x72, 0x6f, 0x62, 0x61, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x48,
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x66, 0x2e, 0x73, 0x74, 0x65, 0x6c,
	0x6c, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x4b, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x66, 0x61, 0x73, 0x74, 0x2f, 0x66, 0x69, 0x72, 0x65, 0x68, 0x6f, 0x73, 0x65, 0x2d, 0x73, 0x74,
	0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x66, 0x2f, 0x73, 0x74, 0x65, 0x6c,
	0x6c, 0x61, 0x72, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x62, 0x73, 0x74,
	0x65, 0x6c, 0x6c, 0x61, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sf_stellar_type_v1_block_proto_rawDescOnce sync.Once
	file_sf_stellar_type_v1_block_proto_rawDescData = file_sf_stellar_type_v1_block_proto_rawDesc
)

func file_sf_stellar_type_v1_block_proto_rawDescGZIP() []byte {
	file_sf_stellar_type_v1_block_proto_rawDescOnce.Do(func() {
		file_sf_stellar_type_v1_block_proto_rawDescData = protoimpl.X.CompressGZIP(file_sf_stellar_type_v1_block_proto_rawDescData)
	})
	return file_sf_stellar_type_v1_block_proto_rawDescData
}

var file_sf_stellar_type_v1_block_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sf_stellar_type_v1_block_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_sf_stellar_type_v1_block_proto_goTypes = []any{
	(ContractEvent_Type)(0),       // 0: sf.stellar.type.v1.ContractEvent.Type
	(*Block)(nil),                 // 1: sf.stellar.type.v1.Block
	(*Header)(nil),                // 2: sf.stellar.type.v1.Header
	(*Transaction)(nil),           // 3: sf.stellar.type.v1.Transaction
	(*DiagnosticEvent)(nil),       // 4: sf.stellar.type.v1.DiagnosticEvent
	(*ContractEvent)(nil),         // 5: sf.stellar.type.v1.ContractEvent
	(*SorobanMeta)(nil),           // 6: sf.stellar.type.v1.SorobanMeta
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_sf_stellar_type_v1_block_proto_depIdxs = []int32{
	2, // 0: sf.stellar.type.v1.Block.header:type_name -> sf.stellar.type.v1.Header
	3, // 1: sf.stellar.type.v1.Block.transactions:type_name -> sf.stellar.type.v1.Transaction
	7, // 2: sf.stellar.type.v1.Block.created_at:type_name -> google.protobuf.Timestamp
	7, // 3: sf.stellar.type.v1.Transaction.created_at:type_name -> google.protobuf.Timestamp
	6, // 4: sf.stellar.type.v1.Transaction.soroban_meta:type_name -> sf.stellar.type.v1.SorobanMeta
	5, // 5: sf.stellar.type.v1.DiagnosticEvent.contract_event:type_name -> sf.stellar.type.v1.ContractEvent
	0, // 6: sf.stellar.type.v1.ContractEvent.type:type_name -> sf.stellar.type.v1.ContractEvent.Type
	5, // 7: sf.stellar.type.v1.SorobanMeta.contract_event:type_name -> sf.stellar.type.v1.ContractEvent
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_sf_stellar_type_v1_block_proto_init() }
func file_sf_stellar_type_v1_block_proto_init() {
	if File_sf_stellar_type_v1_block_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sf_stellar_type_v1_block_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sf_stellar_type_v1_block_proto_goTypes,
		DependencyIndexes: file_sf_stellar_type_v1_block_proto_depIdxs,
		EnumInfos:         file_sf_stellar_type_v1_block_proto_enumTypes,
		MessageInfos:      file_sf_stellar_type_v1_block_proto_msgTypes,
	}.Build()
	File_sf_stellar_type_v1_block_proto = out.File
	file_sf_stellar_type_v1_block_proto_rawDesc = nil
	file_sf_stellar_type_v1_block_proto_goTypes = nil
	file_sf_stellar_type_v1_block_proto_depIdxs = nil
}
